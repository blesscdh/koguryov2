# Generated by Code Composer Studio

# Makefile for E:\monitor2808\cs_prj\monitor2808\monitor2808.pjt
# This makefile is intended to be compatible with any version of make.
#
# USAGE
# Step 1: Set up proper environment variables, by running DosRun.bat
#         (Windows platform) or set them up by yourself.
# Step 2: Change directory to the directory of this makefile, which is stored
#         in the macro MAKEFILE_DIR
# Step 3: In the makefile directory, you can perform one of these operations:
#         To build the configuration <config>, type make <config>
#         To clean the configuration <config>, type make <config>clean
#         To rebuild the configuration <config>, type make <config>rebuild
#         If <config> is not specified, the operations apply to the active
#         configuration, which is stored in the macro ACTIVE_CONFIG.
# For CCS gmake users: In the makefile directory, you can perform one of these operations:
#         To build the configuration <config>, type gmake projectName.mak <config>
#         To clean the configuration <config>, type gmake <config>clean
#         To rebuild the configuration <config>, type gmake <config>rebuild
#         If <config> is not specified, the operations apply to the active
#         configuration, which is stored in the macro ACTIVE_CONFIG.
#
# DETAILS
# Step 1:
#   In order for this makefile to work, you must have the environment variables
# set properly.  Specifically, the paths to build programs and the system-wide
# header files and library files must be set.
#   In Windows, a batch file "DosRun.bat", located at the root directory of
# the Code Composer Studio installation, is provided to set up these variables.
#   In UNIX, you can set up these environment variables yourself.  The "PATH"
# variable must include the paths to the build programs, and the "C_DIR" and
# "A_DIR" variables must include the paths to the system-wide header files and
# library files.
#
# Step 2:
#   System files referenced by this project are specified in full path names,
# while other files in this project are specified in path names relative to the
# directory of this makefile.  These directory names are stored in DIR_x macros.
# You can modify them to reflect the locations of the files on this system.
#   It is important that the command to make this makefile is issued from the
# directory of this makefile, which is stored in the macro MAKEFILE_DIR.
#
# Step 3:
#   There are three operations that can be performed on a build configuration:
# make, clean, and rebuild. A rebuild forces all files in the configuration to
# be rebuilt.
# To build the configuration <config>, type make <config>
# To clean the configuration <config>, type make <config>clean
# To rebuild the configuration <config>, type make <config>rebuild
#   If <config> is not specified, the operations apply to the active
# configuration. The active configuration can be any valid build configuration
# (including "all") and is specified in the macro ACTIVE_CONFIG.
# To build the active configuration, type make
# To clean the active configuration, type make clean
# To rebuild the active configuration, type make rebuild
#
# For CCS gmake users:
#   There are three operations that can be performed on a build configuration:
# make, clean, and rebuild. A rebuild forces all files in the configuration to
# be rebuilt.
# To build the configuration <config>, type gmake projectName.mak <config>
# To clean the configuration <config>, type gmake <config>clean
# To rebuild the configuration <config>, type gmake <config>rebuild
#   If <config> is not specified, the operations apply to the active
# configuration. The active configuration can be any valid build configuration
# (including "all") and is specified in the macro ACTIVE_CONFIG.
# To build the active configuration, type gmake
# To clean the active configuration, type gmake clean
# To rebuild the active configuration, type gmake rebuild

# The MKFLAGS macro takes the place of the MFLAGS or MAKEFLAGS macro. If it
# gives you any trouble, just delete the macro. It is used when recursively
# calling make (i.e. when rebuilding)
MKFLAGS= $(MFLAGS)$(MAKEFLAGS)

MAKEFILE_DIR= E:\monitor2808\cs_prj\monitor2808

# The active configuration can be one of these valid build configurations:
# all, Debug
ACTIVE_CONFIG= Debug

# These DIR_x macros store the directories of the files used in this project.
# There must be no trailing spaces after these macros.

DIR_1= Debug

DIR_2= ..\..\flash

DIR_3= ..\..\main

DIR_4= ..\..\include

DIR_5= C:\Program Files\C2000 Code Generation Tools 4.1.3\include

DIR_6= ..\main

DIR_7= C:\Program Files\C2000 Code Generation Tools 4.1.3\bin

SOURCE=$(DIR_2)\flash.c
SOURCE=$(DIR_3)\DSP280x_CodeStartBranch.asm
SOURCE=$(DIR_3)\DSP280x_CpuTimers.c
SOURCE=$(DIR_3)\DSP280x_DefaultIsr.c
SOURCE=$(DIR_3)\DSP280x_GlobalVariableDefs.c
SOURCE=$(DIR_3)\DSP280x_Gpio.c
SOURCE=$(DIR_3)\DSP280x_MemCopy.c
SOURCE=$(DIR_3)\DSP280x_PieCtrl.c
SOURCE=$(DIR_3)\DSP280x_PieVect.c
SOURCE=$(DIR_3)\DSP280x_Sci.c
SOURCE=$(DIR_3)\DSP280x_SysCtrl.c
SOURCE=$(DIR_3)\DSP280x_usDelay.asm
SOURCE=$(DIR_3)\main.c
SOURCE=$(DIR_3)\main.h
SOURCE=$(DIR_3)\DSP280x_Headers_nonBIOS.cmd
SOURCE=$(DIR_3)\F2808.cmd

active_config: $(ACTIVE_CONFIG)

norecurse: $(ACTIVE_CONFIG)_norecurse

clean: $(ACTIVE_CONFIG)clean

clean_norecurse: $(ACTIVE_CONFIG)clean_norecurse

rebuild: $(ACTIVE_CONFIG)rebuild

force_rebuild: 

all: Debug 

allclean: Debugclean 

allrebuild: Debugrebuild 


Debugclean: Debugclean_norecurse

Debugclean_norecurse: 
	-@del /F $(DIR_1)\DSP280x_CodeStartBranch.obj
	-@del /F $(DIR_1)\DSP280x_usDelay.obj
	-@del /F $(DIR_1)\flash.obj
	-@del /F $(DIR_1)\monitor2808.out

Debugrebuild: 
	$(MAKE) $(MFLAGS) -f monitor2808.mak Debug FRC=force_rebuild

Debug: Debug_norecurse

Debug_norecurse: $(DIR_1)\monitor2808.out



$(DIR_1)\DSP280x_CodeStartBranch.obj \
$(DIR_1)\DSP280x_usDelay.obj \
$(DIR_1)\flash.obj: $(FRC) $(DIR_2)\flash.c $(DIR_3)\DSP280x_CodeStartBranch.asm $(DIR_3)\DSP280x_CpuTimers.c $(DIR_3)\DSP280x_DefaultIsr.c $(DIR_3)\DSP280x_GlobalVariableDefs.c $(DIR_3)\DSP280x_Gpio.c $(DIR_3)\DSP280x_MemCopy.c $(DIR_3)\DSP280x_PieCtrl.c $(DIR_3)\DSP280x_PieVect.c $(DIR_3)\DSP280x_Sci.c $(DIR_3)\DSP280x_SysCtrl.c $(DIR_3)\DSP280x_usDelay.asm $(DIR_3)\main.c $(DIR_4)\DSP280x_Device.h $(DIR_4)\DSP280x_Examples.h $(DIR_5)\stdarg.h $(DIR_5)\stdio.h $(DIR_5)\stdlib.h $(DIR_4)\DSP280x_Adc.h $(DIR_4)\DSP280x_CpuTimers.h $(DIR_4)\DSP280x_DevEmu.h $(DIR_4)\DSP280x_ECan.h $(DIR_4)\DSP280x_ECap.h $(DIR_4)\DSP280x_EPwm.h $(DIR_4)\DSP280x_EQep.h $(DIR_4)\DSP280x_Gpio.h $(DIR_4)\DSP280x_I2c.h $(DIR_4)\DSP280x_PieCtrl.h $(DIR_4)\DSP280x_PieVect.h $(DIR_4)\DSP280x_Sci.h $(DIR_4)\DSP280x_Spi.h $(DIR_4)\DSP280x_SysCtrl.h $(DIR_4)\DSP280x_XIntrupt.h $(DIR_2)\flash.h $(DIR_4)\Flash280x_API_Config.h $(DIR_4)\Flash280x_API_Library.h $(DIR_3)\main.h $(DIR_5)\string.h $(DIR_4)\Struct.h $(DIR_4)\Val.h $(DIR_4)\DSP280x_DefaultISR.h $(DIR_4)\DSP280x_GlobalPrototypes.h 
	-@echo -pm -op0 -o3 -fr"E:/monitor2808/cs_prj/monitor2808/Debug" -i"E:/monitor2808/include" -d"_DEBUG" -d"LARGE_MODEL" -mf -ml -v28> monitor2808.Debug.lkf
	-@echo "flash.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_CodeStartBranch.asm">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_CpuTimers.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_DefaultIsr.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_GlobalVariableDefs.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_Gpio.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_MemCopy.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_PieCtrl.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_PieVect.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_Sci.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_SysCtrl.c">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\DSP280x_usDelay.asm">> monitor2808.Debug.lkf
	-@echo "$(DIR_6)\main.c">> monitor2808.Debug.lkf
	cd $(DIR_2) & \
	"$(DIR_7)\cl2000" -pm -op0 -o3 -fr"E:/monitor2808/cs_prj/monitor2808/Debug" -i"E:/monitor2808/include" -d"_DEBUG" -d"LARGE_MODEL" -mf -ml -v28 -@"../cs_prj/monitor2808/monitor2808.Debug.lkf"
	-@del /F monitor2808.Debug.lkf

$(DIR_1)\monitor2808.out: $(FRC) $(DIR_3)\DSP280x_Headers_nonBIOS.cmd $(DIR_3)\F2808.cmd $(DIR_1)\DSP280x_CodeStartBranch.obj $(DIR_1)\DSP280x_usDelay.obj $(DIR_1)\flash.obj 
	-@echo -z -c -ecode_start -farheap0x300 -heap0x01 -m"./Debug/monitor2808.map" -o"./Debug/monitor2808.out" -stack0x300 -w -x -i"C:/CCStudio_v3.1/C2000/cgtools/lib" -l"rts2800_ml.lib" -l"Flash2808_API_V302.lib"> monitor2808.Debug.lkf
	-@echo "$(DIR_3)\DSP280x_Headers_nonBIOS.cmd">> monitor2808.Debug.lkf
	-@echo "$(DIR_3)\F2808.cmd">> monitor2808.Debug.lkf
	-@echo "$(DIR_1)\DSP280x_CodeStartBranch.obj">> monitor2808.Debug.lkf
	-@echo "$(DIR_1)\DSP280x_usDelay.obj">> monitor2808.Debug.lkf
	-@echo "$(DIR_1)\flash.obj">> monitor2808.Debug.lkf
	"$(DIR_7)\cl2000" -@"monitor2808.Debug.lkf"
	-@del /F monitor2808.Debug.lkf
